path.page.start = /Travelers_war_exploded
path.page.index = /index.jsp
path.page.login = /jsp/login.jsp
path.page.main = /jsp/main.jsp
path.page.error = /jsp/error/error.jsp
path.page.openTrips = /jsp/open_trips.jsp
path.page.openTrip = /jsp/open_trip.jsp
path.page.creatingTrip = /jsp/creating_trip.jsp
path.page.creatingAccount = /jsp/creating_account.jsp
path.page.creatingLocality = /jsp/creating_locality.jsp
path.page.showAccounts = /jsp/show_accounts.jsp
path.page.showUsers = /jsp/show_users.jsp
path.page.showLocalities = /jsp/show_localities.jsp
path.controller.openTrip = controller?command=open_trip&tripId=%d
path.controller.openDriverTrip = controller?command=open_driver_trip&tripId=%d
path.controller.openModeratorTrip = controller?command=open_trip_by_moderator&tripId=%d
path.controller.openTrips = controller?command=open_trips
path.controller.openDriverTrips = controller?command=open_driver_trips
path.controller.openTripsModerator = controller?command=open_trips_by_moderator
path.controller.showAccounts = controller?command=show_accounts
path.controller.showAuthorizedAccounts = controller?command=show_authorized_accounts
path.controller.showAccountsForModerator = controller?command=show_accounts_for_moderator
path.controller.showLocalities = controller?command=show_localities
error.deleteAccount = error=delete_account
error.deleteSelfAccount = error=delete_self
error.editAccount = error=edit_account
error.editSelfAccount = error=edit_self
error.createLocality = error=create_locality
error.editLocality = error=edit_locality
error.deleteLocality = error=delete_locality
error.bookTrip = error=book_trip
error.driverApprove = error=driver_approve
error.closeTripBeforeToday = error=close_trip
error.createTrip = error=create_trip
message.loginError = Ошибка: неверный логин или пароль
message.banError = Ошибка: аккаунт заблокирован
message.unknownLoginError = Ошибка: не удалось войти
message.deleteAccountError = Нельзя удалить пользователя, который участвует в поездках
message.deleteSelfError = Нельзя удалить самого себя
message.editAccountError = Нельзя изменить роль пользователя, который участвует в поездках
message.editSelfError = Нельзя изменить свою роль
message.createLocality = Не получилось создать населённый пункт. Проверьте название на уникальность
message.editLocality = Не получилось изменить населённый пункт. Проверьте название на уникальность
message.deleteLocality = Нельзя удалить населённый пункт, который используется в поездках
message.bookTripError = Нельзя участвовать в двух поездках в одно время
message.driverApproveError = Недостаточно мест в поездке
message.closeTripBeforeToday = Нельзя завершить поездку раньше её даты
message.createNotUniqueTrip = В это время у Вас уже есть поездка
connectionUrl = jdbc:oracle:thin:yaroslav/123@localhost:1521/XEPDB1
query.login = SELECT user_account.*, user_rating.name FROM user_account LEFT JOIN user_rating ON user_account.id = user_rating.id WHERE login = ? AND password = ?
query.allOpenTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id WHERE state = 1 AND number_seats > number_passengers
query.passengerActiveTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id JOIN participant_trip ON participant_trip.trip_id = trip.id WHERE participant_trip.participant_id = ? and trip.state = 1
query.passengerInactiveTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id JOIN participant_trip ON participant_trip.trip_id = trip.id WHERE participant_trip.participant_id = ? and trip.state != 1
query.activeTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id WHERE trip.state = 1
query.closedTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id WHERE trip.state = 2
query.canceledTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id WHERE trip.state = 3
query.deletedTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id WHERE trip.state = 0
query.passengerTrip = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id WHERE trip.id = ?
query.driverActiveTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id WHERE trip.driver = ? and trip.state = 1
query.driverInactiveTrips = SELECT trip.id, l1.name as start_point, l2.name as final_point, TO_CHAR(trip.datetime, 'DD Month HH24:MI') as datetime, trip.number_passengers, trip.number_seats, trip.price, user_rating.name as driver_name, user_rating.sum_marks as driver_sum_marks, user_rating.count_marks as driver_count_marks, trip.collection_point, trip.description, trip.state FROM trip JOIN user_rating ON trip.driver = user_rating.id JOIN locality l1 ON trip.start_point = l1.id JOIN locality l2 ON trip.final_point = l2.id WHERE trip.driver = ? and trip.state != 1
query.participantsTrip = SELECT user_rating.id, user_rating.name, user_rating.sum_marks, user_rating.count_marks, participant_trip.driver_approve, participant_trip.passenger_refusal, driver_mark, passenger_mark FROM participant_trip JOIN user_rating ON participant_trip.participant_id = user_rating.id WHERE participant_trip.trip_id = ? AND driver_approve >= 0 AND NOT (driver_approve = 0 AND passenger_refusal = 1)
query.participantsTripForModerator = SELECT user_rating.id, user_rating.name, user_rating.sum_marks, user_rating.count_marks, participant_trip.driver_approve, participant_trip.passenger_refusal, driver_mark, passenger_mark, user_account.is_blocked FROM participant_trip JOIN user_rating ON participant_trip.participant_id = user_rating.id JOIN user_account ON participant_trip.participant_id = user_account.id WHERE participant_trip.trip_id = ?
query.createParticipantId = INSERT INTO participant_trip VALUES (?, ?, 0, 0, 0, 0)
query.participantInTrip = SELECT user_rating.id, user_rating.name, user_rating.sum_marks, user_rating.count_marks, participant_trip.driver_approve, participant_trip.passenger_refusal, driver_mark, passenger_mark FROM participant_trip JOIN user_rating ON participant_trip.participant_id = user_rating.id WHERE participant_id = ? AND trip_id = ?
query.refusalTrip = UPDATE participant_trip SET passenger_refusal = 1 WHERE participant_id = ? AND trip_id = ?
query.updateNumberPassengersAfterRefusal = UPDATE trip SET number_passengers = number_passengers - (SELECT driver_approve FROM participant_trip WHERE participant_id = ? AND trip_id = ?) WHERE id = ?
query.setAuthorized = UPDATE user_account SET is_authorized = 1 WHERE id = ?
query.resetAuthorized = UPDATE user_account SET is_authorized = 0 WHERE id = ?
query.driverApprove = UPDATE participant_trip SET driver_approve = 1 WHERE participant_id = ? AND trip_id = ?
query.driverDisapprove = UPDATE participant_trip SET driver_approve = -1 WHERE participant_id = ? AND trip_id = ?
query.updateNumberPassengersAfterApprove = UPDATE trip SET number_passengers = number_passengers + 1 WHERE id = ?
query.closeTrip = UPDATE trip SET state = 2 WHERE id = ?
query.cancelTrip = UPDATE trip SET state = 3 WHERE id = ?
query.allAccounts = SELECT * FROM user_account ORDER BY group_id, login
query.authorizedAccounts = SELECT * FROM user_account WHERE is_authorized = 1 ORDER BY group_id, login
query.createAccount = INSERT INTO user_account(login, password, group_id, is_blocked, is_authorized) VALUES (?, ?, ?, 0, 0)
query.createUser = INSERT INTO user_rating VALUES (?, ?, 0, 0)
query.passengerParticipateInTrips = SELECT * FROM participant_trip WHERE participant_id = ?
query.driverHasTrips = SELECT * FROM trip WHERE driver = ?
query.getAccount = SELECT user_account.*, user_rating.name FROM user_account LEFT JOIN user_rating ON user_account.id = user_rating.id WHERE user_account.id = ?
query.deleteUser = DELETE FROM user_rating WHERE id = ?
query.deleteAccount = DELETE FROM user_account WHERE id = ?
query.userGroups = SELECT * FROM user_group
query.fullUpdateAccount = UPDATE user_account SET login = ?, password = ?, group_id = ? WHERE id = ?
query.updateAccountWithoutGroup = UPDATE user_account SET login = ?, password = ? WHERE id = ?
query.updateNameUser = UPDATE user_rating SET name = ? WHERE id = ?
query.getUsers = SELECT user_rating.*, user_account.group_id, user_account.is_blocked FROM user_rating JOIN user_account ON user_account.id = user_rating.id ORDER BY group_id, name
query.getDriver = SELECT user_rating.*, user_account.group_id, user_account.is_blocked FROM user_rating JOIN user_account ON user_account.id = user_rating.id WHERE user_rating.id = (SELECT driver FROM trip WHERE trip.id = ?)
query.deleteTrip = UPDATE trip SET state = 0 WHERE id = ?
query.blockUser = UPDATE user_account SET is_blocked = 1 WHERE id = ?
query.unblockUser = UPDATE user_account SET is_blocked = 0 WHERE id = ?
query.editTrip = UPDATE trip SET collection_point = ?, description = ? WHERE id = ?
query.getLocalities = SELECT * FROM locality ORDER BY type, name
query.getTypesLocalities = SELECT * FROM type_locality
query.getLocality = SELECT * FROM locality WHERE id = ?
query.createLocality = INSERT INTO locality(name, type) VALUES (?, ?)
query.editLocality = UPDATE locality SET name = ?, type = ? WHERE id = ?
query.localityIsUsed = SELECT * FROM trip WHERE start_point = ? or final_point = ?
query.deleteLocality = DELETE FROM locality WHERE id = ?
query.createTrip = INSERT INTO trip(driver, datetime, state, price, number_seats, number_passengers, start_point, final_point, collection_point, description) VALUES (?, TO_TIMESTAMP(?, 'YYYY-MM-DD HH24:MI'), 1, ?, ?, 0, ?, ?, ?, ?)
query.rateUser = UPDATE user_rating SET count_marks = count_marks + 1, sum_marks = sum_marks + ? WHERE id = ?
query.rateDriver = UPDATE user_rating SET count_marks = count_marks + 1, sum_marks = sum_marks + ? WHERE id = (SELECT driver FROM trip WHERE trip.id = ?)
query.setPassengerMark = UPDATE participant_trip SET passenger_mark = ? WHERE participant_id = ? AND trip_id = ?
query.setDriverMark = UPDATE participant_trip SET driver_mark = ? WHERE participant_id = ? AND trip_id = ?
query.uniqueBook = SELECT * FROM participant_trip JOIN trip ON participant_trip.trip_id = trip.id WHERE participant_id = ? AND passenger_refusal = 0 AND trip.datetime = (SELECT datetime FROM trip WHERE id = ?)
query.checkDateForClose = SELECT * FROM trip WHERE id = ? AND datetime <= CURRENT_TIMESTAMP